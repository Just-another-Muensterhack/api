"""init

Revision ID: d37080cc82e2
Revises: 
Create Date: 2022-09-24 03:47:08.884476

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "d37080cc82e2"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_registered_users_email", table_name="registered_users")
    op.drop_index("ix_registered_users_first_name", table_name="registered_users")
    op.drop_index("ix_registered_users_id", table_name="registered_users")
    op.drop_index("ix_registered_users_last_name", table_name="registered_users")
    op.drop_index("ix_registered_users_phone_number", table_name="registered_users")
    op.drop_table("registered_users")
    op.drop_index("ix_users_id", table_name="users")
    op.drop_table("users")
    op.drop_index("ix_emergencies_id", table_name="emergencies")
    op.drop_table("emergencies")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "emergencies",
        sa.Column("id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "status",
            postgresql.ENUM("in_progress", "cancelled", "completed", name="status"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "latitude",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "longitude",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "closed_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="emergencies_pkey"),
    )
    op.create_index("ix_emergencies_id", "emergencies", ["id"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
    )
    op.create_index("ix_users_id", "users", ["id"], unique=False)
    op.create_table(
        "registered_users",
        sa.Column("id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column("phone_number", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "role",
            postgresql.ENUM("admin", "support", "user", name="role"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("first_name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("last_name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("hashed_password", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="registered_users_pkey"),
    )
    op.create_index(
        "ix_registered_users_phone_number",
        "registered_users",
        ["phone_number"],
        unique=False,
    )
    op.create_index(
        "ix_registered_users_last_name", "registered_users", ["last_name"], unique=False
    )
    op.create_index("ix_registered_users_id", "registered_users", ["id"], unique=False)
    op.create_index(
        "ix_registered_users_first_name",
        "registered_users",
        ["first_name"],
        unique=False,
    )
    op.create_index(
        "ix_registered_users_email", "registered_users", ["email"], unique=False
    )
    # ### end Alembic commands ###
